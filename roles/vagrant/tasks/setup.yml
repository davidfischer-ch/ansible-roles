---

- block:
    - include: setup-from-{{ 'release' if vagrant_from_release|bool else 'repository' }}.yml

    - name: Get installed Vagrant plugins
      command: >
        vagrant plugin list
      changed_when: no
      check_mode: no
      register: _vagrant_plugin

    - name: Install Vagrant plugins
      command: >
        vagrant plugin install vagrant-{{ item }}
      loop: '{{ vagrant_plugins }}'
      when: item not in _vagrant_plugin.stdout
  tags: packages

- block:
    - include: configure.yml

    - name: Check boxes are up-to-date
      command: >
        vagrant box outdated
      args:
        chdir: '{{ vagrant_machines_directory }}'
      changed_when: "vagrant_update_boxes|bool and 'to update' in _vagrant_outdated.stdout"
      check_mode: no
      register: _vagrant_outdated
      tags: upgrade

    - block:
        - name: Update boxes
          command: >
            vagrant box update
          args:
            chdir: '{{ vagrant_machines_directory }}'

        - name: Cleanup boxes
          command: >
            vagrant box prune --force {{ ansible_check_mode|ternary('--dry-run', '') }}
          changed_when: >
            _vagrant_prune is success and (
              'Usage' not in _vagrant_prune.stdout and
              'no installed' not in _vagrant_prune.stdout and
              'No old versions' not in _vagrant_prune.stdout
            )
          check_mode: no
          register: _vagrant_prune
      tags: upgrade
      when: _vagrant_outdated is change

    - name: Provision machines
      vagrant_machine: >
        chdir={{ vagrant_machines_directory }} name={{ item.name }} provider={{ item.provider }} state=running
        timeout={{ item.timeout|int if item.timeout is defined else omit }}
      loop: '{{ vagrant_machines }}'
      loop_control:
        label: '{{ item.name }}'
      register: _vagrant_provision
  always:
    # FIXME less verbose output https://github.com/ansible/ansible/issues/5564
    - name: Cleanup machines SSH authentication footprints
      known_hosts: >
        name={{ item.item.host_public }} state=absent
      loop: '{{ _vagrant_provision.results|default([]) }}'
      loop_control:
        label: '{{ item.item.name }}'
      when: item is change
  tags: provision

- name: Wait for machines to be started
  local_action: >
    wait_for host={{ item.host_public }} port=22 state=started
  loop: '{{ vagrant_machines }}'
  loop_control:
    label: '{{ item.name }}'
  tags: provision
