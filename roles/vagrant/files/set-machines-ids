#!/usr/bin/env python
# -*- encoding: utf-8 -*-

"""
Update the Vagrant machines dictionary with the machines IDs.
"""

import argparse, json, re, subprocess, sys, yaml
from codecs import open

VBOX_LIST_REGEX = re.compile(r'"(?P<name>[^"]+)"\s+{(?P<uuid>[0-9a-f\-]+)}')


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('machines_file')
    args = parser.parse_args()

    with open(args.machines_file, 'r', encoding='utf-8') as f:
        machines = yaml.load(f.read())

    for index, machine in enumerate(machines):
        machines[index]['uuid'] = get_vagrant_machine_id(machine['name'], machine['provider'])
    sys.stdout.write(json.dumps(machines))


def get_virtualbox_machines_list():
    return {
        n: u for n, u in VBOX_LIST_REGEX.findall(subprocess.check_output(['vboxmanage', 'list', 'vms']).decode('utf-8'))
    }


def get_vagrant_machine_id(name, provider):
    if provider == 'virtualbox':
        return get_virtualbox_machines_list().get(name)
    else:
        raise NotImplementedError('Handling machine {0} provider {1} not yet implemented.'.format(name, provider))


if __name__ == '__main__':
    main()
