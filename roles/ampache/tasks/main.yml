# Install and configure Ampache
# https://github.com/ampache/ampache/wiki/Installation
# FIXME do not install MySQL on Ampache nodes but use delegate or MySQL through the command line to setup DB & user
---

- block:
    - name: Install Ampache packages
      package: >
        name={{ item }} state=present
      with_items: '{{ ampache_packages }}'

    - name: Clone Ampache source code
      git: >
        repo={{ ampache_repository_url }} dest={{ local_source_directory }}/ampache force=yes version={{ ampache_version }}
      become: no

    - name: Install Ampache from source
      command: >
        rsync -ah -lH --delete {{ local_source_directory }}/ampache/ /usr/share/ampache/www2/ --exclude=.git
        --exclude=lib/components --exclude=lib/vendor --exclude=config/ampache.cfg.php
        --exclude=channel/.htaccess --exclude=play/.htaccess --exclude=rest/.htaccess
      changed_when: ampache_install_result.stdout|length > 1
      register: ampache_install_result

    - name: Install Ampache dependencies
      command: >
        composer install --prefer-source --no-interaction
      args:
        chdir: '{{ ampache_web_directory }}'
      changed_when: "'Nothing to install or update' not in ampache_install_result.stderr"
      register: ampache_install_result
  tags: [ampache, packages]

- block:
    - name: Create Ampache directories
      file: >
        name={{ item }} owner=www-data group=www-data mode=755 recurse=no state=directory
      when: item|length > 0
      with_items:
        - '{{ ampache_log_directory }}'
        - '{{ ampache_metadata_directory }}'
        - '{{ ampache_tmp_directory }}'

    - name: Enable Apache 2 modules
      apache2_module: >
        name={{ item }} state=present
      with_items:
        - ssl
        - rewrite

    - name: Configure Ampache
      template: >
        src={{ item.name }}.j2 dest=/usr/share/ampache/www2/{{ item.path }} owner=root group=root mode=644
      notify: reload apache2
      with_items:
        - { name: 'ampache.cfg.{{ ampache_config_version|int }}.php', path: 'config/ampache.cfg.php' }
        - { name: 'channel-htaccess', path: 'channel/.htaccess' }
        - { name: 'play-htaccess', path: 'play/.htaccess' }
        - { name: 'rest-htaccess', path: 'rest/.htaccess' }

    - name: Remove Ampache default site
      file: >
        name=/etc/apache2/{{ item }}.conf state=absent
      notify: reload apache2
      with_items:
        - conf-available/ampache
        - conf-enabled/ampache
        - sites-available/000-default
        - sites-enabled/000-default

    - name: Configure Ampache site
      template: >
        src=ampache.conf.j2 dest=/etc/apache2/sites-available/ampache.conf owner=root group=root mode=644
      notify: reload apache2

    - name: Enable Ampache site
      file: >
        src=/etc/apache2/sites-available/ampache.conf dest=/etc/apache2/sites-enabled/ampache.conf state=link
      notify: reload apache2
  become: yes
  tags: [ampache, config]

- block:
    - name: Setup Ampache MySQL database
      mysql_db: >
        name=ampache state=present
      register: ampache_database_result

    - name: Setup Ampache MySQL user
      mysql_user: >
        name=ampache host=localhost password={{ ampache_mysql_password }} priv=ampache.*:ALL state=present

    - name: Initialize Ampache MySQL database
      shell: >
        mysql -uampache -p{{ ampache_mysql_password }} ampache < {{ ampache_web_directory }}/sql/ampache.sql
      when: ampache_database_result|changed

    # FIXME generate passwords - https://github.com/ampache/ampache/blob/develop/lib/class/user.class.php#L982
    # FIXME create preferences - https://github.com/ampache/ampache/blob/develop/lib/class/user.class.php#L1085
    - name: Register Ampache users
      command: >
        mysql -uampache -p{{ ampache_mysql_password }} ampache -e
        "INSERT INTO user (username, fullname, email, password, access) VALUES (
            '{{ item.username }}', '{{ item.fullname }}', '{{ item.email }}', '{{ item.password }}',
            {{ item.is_admin|bool|ternary(100, 25)}}
        );"
      changed_when: "'Duplicate' not in ampache_register_result.stderr"
      failed_when: ampache_register_result|failed and 'Duplicate' not in ampache_register_result.stderr
      register: ampache_register_result
      with_items: ampache_users
  become: yes
  tags: [ampache, databases]
