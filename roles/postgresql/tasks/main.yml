# Install and configure PostgreSQL including setup our user & database
---

- name: Install PostgreSQL packages
  package: >
    name={{ item }} state=present
  become: yes
  tags: [postgresql, packages]
  with_items: '{{ postgresql_packages }}'

- block:
    - name: Configure PostgreSQL
      template: >
        src={{ postgresql_config_file }} dest=/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf mode=644
      register: _postgresql_config

    - name: Configure PostgreSQL allowed hosts
      template: >
        src=pg_hba.conf.j2 dest=/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf mode=644
      register: _postgresql_allow

    - name: Restart PostgreSQL service
      service: >
        name=postgresql state=restarted enabled=yes
      tags: flush-extra
      when: _postgresql_config is change or _postgresql_allow is change
  become: yes
  tags: [postgresql, config]

- name: Start PostgreSQL service
  service: >
    name=postgresql state=started enabled=yes
  become: yes
  tags: [postgresql, services]

- block:
    - name: Install PostGIS packages
      package: >
        name={{ item }} state=present
      with_items:
        - postgis
        - 'postgresql-{{ postgresql_version }}-postgis-2.1'
        - 'postgresql-{{ postgresql_version }}-postgis-2.1-scripts'

    - name: Install geolocation prerequisites required for all back-ends
      package: >
        name={{ item }} state=present
      with_items:
        - binutils
        - libgeos-3.4.2
        - libgeos-c1
        - libgeos-dev

    - name: Install geolocation prerequisites required for PostgreSQL and SQLite
      package: >
        name={{ item }} state=present
      with_items:
        - libproj-dev
        - proj-bin
        - proj-data

    - name: Install geolocation prerequisites optional but required for SQLite
      package: >
        name={{ item }} state=present
      with_items:
        - gdal-bin
        - libgdal1-dev
        - python3-gdal

    - name: install optional IP-based geolocation library
      package: >
        name={{ item }} state=present
      with_items:
        - libgeoip1
  become: yes
  tags: [postgresql, packages]
  when: "'postgis' in postgresql_extensions"

- include_role:
    name: postgresql-databases
  tags: [postgresql, databases]
  when: postgresql_is_master|bool
