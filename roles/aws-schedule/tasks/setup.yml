---

- name: Create the resources scheduling role
  iam:
    iam_type: role
    name: resources-scheduling
    trust_policy:
      Version: '2012-10-17'
      Statement:
      - Action: sts:AssumeRole
        Effect: Allow
        Principal:
          Service: lambda.amazonaws.com
    state: present

- name: Create the resources scheduling policy
  iam_policy:
    iam_name: resources-scheduling
    iam_type: role
    policy_name: resources-scheduling
    policy_json: "{{ lookup('template', 'ResourcesSchedulingPolicy.json.j2') }}"
    region: '{{ aws_schedule_region }}'
    state: present
  register: _aws_schedule_policy

- name: Wait some time for the policy to be available
  pause: seconds=10
  when: _aws_schedule_policy is change

- name: Create temporary directory
  file: >
    name=/tmp/aws-schedule/{{ aws_schedule_environment }} state=directory

- name: Generate the resources scheduling lambda functions
  template: >
    src={{ item.name }}.py.j2
    dest=/tmp/aws-schedule/{{ aws_schedule_environment }}/{{ item.name }}.py
  loop: '{{ aws_schedule_functions }}'

- name: Archive the resources scheduling lambda functions
  archive: >
    path=['/tmp/aws-schedule/{{ aws_schedule_environment }}/{{ item.name }}.py']
    dest=/tmp/aws-schedule/{{ aws_schedule_environment }}/{{ item.name }}.zip format=zip
  loop: '{{ aws_schedule_functions }}'

- name: Deploy the resources scheduling lambda functions
  lambda:
    name: '{{ aws_schedule_environment }}-{{ item.name }}'
    handler: '{{ item.name }}.lambda_handler'
    memory_size: 128
    region: '{{ aws_schedule_region }}'
    role: 'arn:aws:iam::{{ aws_schedule_account_id }}:role/resources-scheduling'
    runtime: python3.6
    timeout: 60
    zip_file: /tmp/aws-schedule/{{ aws_schedule_environment }}/{{ item.name }}.zip
    state: present
  loop: '{{ aws_schedule_functions }}'

- name: Configure the resources scheduling events
  cloudwatchevent_rule:
    name: '{{ aws_schedule_environment }}-{{ item.name }}'
    schedule_expression: '{{ item.schedule }}'
    description: '{{ item.name|title }} resources of environment {{ aws_schedule_environment }}'
    targets:
      - id: '{{ aws_schedule_environment }}-{{ item.name }}'
        arn: 'arn:aws:lambda:{{ aws_schedule_region }}:{{ aws_schedule_account_id }}:function:{{ aws_schedule_environment }}-{{ item.name }}'
    state: present
  loop: '{{ aws_schedule_functions }}'
