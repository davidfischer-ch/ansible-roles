# https://www.sslshopper.com/article-how-to-create-and-install-an-apache-self-signed-certificate.html
---

- name: Install OpenSSL packages
  package: >
    name={{ item }} state=present
  become: yes
  loop: '{{ openssl_packages }}'
  tags: [openssl, packages]

- block:
    - include_tasks: 'setup-build-dep-{{ ansible_pkg_mgr }}.yml'

    - name: Set OpenSSL build environment
      set_fact:
        openssl_build_env: >
          {{ openssl_build_cfg }}
          {{ openssl_checksum }}
          {{ openssl_version }}

    - name: Detect if OpenSSL must be reinstalled
      command: >
        cat '{{ local_source_directory }}/openssl.build.cfg'
      changed_when: >
        openssl_build_env|trim != openssl_build.stdout|default('')|trim
      check_mode: no
      failed_when: no
      register: openssl_build

    - block:
        - name: Download OpenSSL source code
          get_url: >
            url=https://github.com/openssl/openssl/archive/{{ openssl_source_package }} force=no
            dest={{ local_source_directory }}/{{ openssl_source_package }} sha256sum={{ openssl_checksum }}

        - name: Extract OpenSSL source code
          unarchive: >
            src={{ local_source_directory }}/{{ openssl_source_package }} dest={{ local_source_directory }} copy=no

        - name: Configure OpenSSL build process
          command: >
            ./config {{ openssl_build_cfg }}
          args:
            chdir: '{{ local_source_directory }}/{{ openssl_source_directoy }}'

        - name: Build OpenSSL from source
          make:
            chdir: '{{ local_source_directory }}/{{ openssl_source_directoy }}'
            params:
              '--jobs': '{{ ansible_processor_cores }}'

        - name: Install OpenSSL from source
          make:
            chdir: '{{ local_source_directory }}/{{ openssl_source_directoy }}'
            target: install

        - name: Save build environment
          copy: >
            content={{ openssl_build_env }} dest={{ local_source_directory }}/openssl.build.cfg
      when: openssl_build is change

    - name: Check OpenSSL version
      command: >
        openssl version
      changed_when: no
      check_mode: no
      failed_when: openssl_version not in _openssl_version.stdout
      register: _openssl_version
  become: yes
  tags: [openssl, packages]
  when: openssl_from_source|bool

- block:
    - name: Create self-signed SSL certificate directory
      file: >
        name={{ item|dirname }} state=directory
      loop:
        - '{{ ssl_cert_crt_filename }}'
        - '{{ ssl_cert_key_filename }}'

    - name: Generate self-signed SSL certificate
      command: >
        openssl req -x509 -nodes -days {{ ssl_cert_days|int }} -newkey rsa:2048 -subj
        "/C={{ ssl_cert_country }}/ST={{ ssl_cert_state }}/L={{ ssl_cert_locality }}/O={{ ssl_cert_organization }}/OU={{ ssl_cert_organization_unit }}/CN={{ domain }}"
        -keyout {{ ssl_cert_key_filename }} -out {{ ssl_cert_crt_filename }}
      args:
        creates: '{{ ssl_cert_crt_filename }}'
  become: yes
  tags: [openssl, config]
  when: ssl_cert_key_filename|default('')|length > 0
