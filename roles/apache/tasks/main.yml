# Install and configure Apache 2
---

- assert:
    that:
      - apache_log_level in apache_log_levels
  tags: [apache, always]

- block:
    - name: Install Apache packages
      package:
        name: '{{ apache_packages }}'
        state: present

    - name: Install Apache macro package if available
      package:
        name: '{{ apache_macro_package }}'
        state: present
      failed_when: _apache_macro is failure and 'available' not in _apache_macro.msg
      register: _apache_macro
      when: apache_macro_package|length > 0
  become: yes
  tags: [apache, packages]

- include_tasks: pagespeed.yml
  tags: [apache, packages]
  when: apache_pagespeed_module_enabled|bool

- import_tasks: get-version.yml
  tags: [apache, always]

- block:
    - name: Create Apache directories
      file:
        name: '{{ item.name }}'
        owner: '{{ item.owner|default(omit) }}'
        group: '{{ item.group|default(omit) }}'
        mode: 0755
        state: directory
      loop:
        - { name: '/etc/apache2/sites-auth/'    }
        - { name: '/etc/apache2/sites-dhparam/' }
        - { name: '/etc/apache2/sites-ssl/'     }

    - name: Configure Apache
      template:
        src: '{{ apache_config_file }}'
        dest: /etc/apache2/apache2.conf
        mode: 0600
      notify: reload apache

    - name: Setup Apache extra configuration
      template:
        src: '{{ item.value.config_file }}'
        dest: /etc/apache2/conf.d/{{ item.value.name }}.conf
        mode: 0644
      loop_control:
        label: '{{ item.key }}'
      notify: reload apache
      with_dict: '{{ apache_extra_config_files }}'

    - name: Configure Apache ports
      template:
        src: '{{ apache_ports_file }}'
        dest: /etc/apache2/ports.conf
        mode: 0600
      notify: restart apache
      when: apache_ports_file|length > 0

    - name: Configure Apache macros
      template:
        src: '{{ apache_macros_file }}'
        dest: /etc/apache2/mods-available/macro.conf
        mode: 0644
      notify: reload apache
      when: apache_macros_file|length > 0

    - name: Configure Apache base modules
      template:
        src: modules/{{ item }}.conf.j2
        dest: /etc/apache2/mods-available/{{ item }}.conf
        mode: 0644
      loop:
        - mpm_event
        - mpm_prefork
        - mpm_worker
        - ssl
      notify: restart apache

    - name: Enable Apache modules
      apache2_module:
        name: '{{ item }}'
        state: present
      ignore_errors: yes
      loop: '{{ apache_modules }}'
      notify: restart apache
      register: _apache_enable_modules

    - name: Enable Apache modules (fallback to a2enmod)
      command:
        a2enmod {{ item.item }}
      loop: '{{ _apache_enable_modules.results }}'
      loop_control:
        label: '{{ item.item }}'
      changed_when: "'already enabled' not in _apache_enable_modules_fallback.stdout"
      notify: restart apache
      register: _apache_enable_modules_fallback
      when: item is failure
  become: yes
  tags: [apache, config]

- name: Start Apache service
  service:
    name: apache2
    enabled: yes
    state: started
  become: yes
  tags: [apache, services]

- block:
    - name: Setup the Apache sites basic authentication
      template:
        src: '{{ item.value.auth_file }}'
        dest: /etc/apache2/sites-auth/{{ item.value.name }}.conf
        mode: 0644
      loop_control:
        label: '{{ item.value.name }}'
      notify: reload apache
      when: item.value.auth_file|default('')|length > 0
      with_dict: '{{ apache_sites }}'

    - name: Setup the Apache sites certificates
      copy:
        src: '{{ item.0.ssl_files_prefix }}.{{ item.1 }}'
        dest: /etc/apache2/sites-ssl/{{ item.0.name }}.{{ item.1 }}
        owner: '{{ apache_daemon_user }}'
        group: '{{ apache_daemon_group }}'
        mode: 0444
      loop: "{{ lookup('nested', apache_sites.values(), ['crt', 'key']) }}"
      loop_control:
        label: '{{ item.0.name }} {{ item.1 }}'
      notify: reload apache
      when: item.0.ssl_files_prefix|default('')|length > 0

    - name: Setup the Apache sites Diffie-Hellman parameters
      command:
        openssl dhparam -out /etc/apache2/sites-dhparam/{{ item.value.name }}.pem 2048
      args:
        creates: /etc/apache2/sites-dhparam/{{ item.value.name }}.pem
      loop_control:
        label: '{{ item.value.name }}'
      notify: reload apache
      when: item.value.with_dhparam|default(true)|bool
      with_dict: '{{ apache_sites }}'

    - name: Create the Apache sites logs directory
      file:
        name: /var/log/apache2/{{ item.value.name }}
        owner: '{{ apache_daemon_user }}'
        group: '{{ apache_daemon_group }}'
        mode: 0755
        follow: no
        recurse: yes
        state: directory
      loop_control:
        label: '{{ item.value.name }}'
      with_dict: '{{ apache_sites }}'

    - name: Setup the Apache sites
      template:
        src: '{{ item.value.config_file }}'
        dest: /etc/apache2/sites-available/{{ item.value.name }}.conf
        mode: 0644
      loop_control:
        label: '{{ item.value.name }}'
      notify: reload apache
      with_dict: '{{ apache_sites }}'

    - name: Enable the Apache sites
      file:
        src: /etc/apache2/sites-available/{{ item.value.name }}.conf
        dest: /etc/apache2/sites-enabled/{{ item.value.name }}.conf
        state: link
      loop_control:
        label: '{{ item.value.name }}'
      notify: reload apache
      with_dict: '{{ apache_sites }}'

    - name: Disable unwanted sites
      file:
        name: /etc/apache2/sites-enabled/{{ item.0 }}{{ item.1 }}
        state: absent
      loop: "{{ lookup('nested', apache_disabled_sites, ['', '.conf']) }}"
      notify: reload apache
  become: yes
  tags: [apache, sites]
