# Install and configure PHP
---

- block:
    - name: Install PHP apt repository
      apt_repository: >
        repo={{ php_apt_repository }} filename=ansible_roles_php update_cache=yes state=present
      when: "ansible_pkg_mgr == 'apt' and php_apt_repository|length > 0"

    - name: Install PHP packages
      package: >
        name={{ item }} state=present
      with_items: '{{ php_packages }}'

    - name: Install Apache PHP module
      package: >
        name={{ php_apache_package }} state=present
      when: php_apache_package|length > 0

    - name: Install PHP mbstring package if available
      package: >
        name={{ php_mbstring_package }} state=present
      failed_when: _php_mbstring|failed and 'available' not in _php_mbstring.msg
      register: _php_mbstring
      when: php_mbstring_package|length > 0
  become: yes
  tags: [php, packages]

- block:
    - name: Find PHP configuration files
      find:
        file_type: file
        paths:
          - '/etc/php{{ php_version }}'
          - '/etc/php/{{ php_version }}'
        patterns: php.ini
        recurse: yes
      register: _php_config_files

    - name: Find PHP extra configuration directories
      find:
        file_type: directory
        paths:
          - '/etc/php{{ php_version }}'
          - '/etc/php/{{ php_version }}'
        patterns: conf.d
        recurse: yes
      register: _php_extra_config_directories

    - name: Find PHP modules configuration directories
      find:
        file_type: directory
        paths:
          - '/etc/php{{ php_version }}'
          - '/etc/php/{{ php_version }}'
        patterns: mods-available
        recurse: yes
      register: _php_modules_config_directories

    - set_fact:
        php_config_files: "{{ _php_config_files.files|map(attribute='path')|list }}"
        php_extra_config_directories: "{{ _php_extra_config_directories.files|map(attribute='path')|list }}"
        php_modules_config_directories: "{{ _php_modules_config_directories.files|map(attribute='path')|list }}"

    - assert:
        that:
          - php_config_files|length > 0
          - php_extra_config_directories|length > 0

    - include: get-version.yml

    - name: Enable PHP modules
      script: >
        scripts/php_enable_module {{ php_version }} {{ item }}
      changed_when: "'changed' in _php_enable_module.stdout|default('')"
      notify: php_config_changed
      register: _php_enable_module
      when: php_detected_version|version_compare('5.4', '>=')
      with_items: '{{ php_modules }}'

    - name: WARNING Enable PHP modules is not implemented with PHP < 5.4
      pause: >
        seconds=5
      when: php_detected_version|version_compare('5.4', '<')

    - name: Configure PHP
      lineinfile: >
        dest={{ item.0 }} regexp='^(;\s*)?{{ item.1 }}\s*=' line='{{ item.1 }} = {{ item.2 }}' state=present
      notify: php_config_changed
      with_nested:
        - '{{ php_config_files|default([]) }}'
        - '{{ php_options.items()|default([])|list }}'

    - name: Configure PHP modules
      lineinfile: >
        dest={{ item.0 }}/{{ item.1 }}.ini state=present
        regexp='^(;\s*)?{{ item.2 }}\s*=' line='{{ item.2 }} = {{ item.3 }}'
      notify: php_config_changed
      with_nested:
        - '{{ php_modules_config_directories }}'
        - '{{ php_modules_options }}'

    - name: Configure suhosin to whitelist phar
      copy: >
        content='suhosin.executor.include.whitelist = phar' dest={{ item }}/suhosin.ini
      notify: php_config_changed
      with_items: '{{ php_extra_config_directories }}'
  become: yes
  tags: [php, config]

- name: Trigger PHP FPM reload
  service: >
    name=php{{ php_version }}-fpm state=started
  become: yes
  check_mode: yes
  changed_when: _php_fpm.msg is undefined
  failed_when: no
  notify: reload php-fpm
  register: _php_fpm
  tags: [php, update]
  when: php_fpm_reload_on_update|bool
