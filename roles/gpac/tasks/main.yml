# https://github.com/gpac/gpac/blob/master/doc/INSTALL.gcc
---

- dynamic_defaults:
    hostvars: '{{ hostvars[inventory_hostname] }}'
    defaults: '{{ gpac_dynamic_defaults }}'
    must_match: yes
  tags: [gpac, always]

- block:
    - name: Install GPAC build packages
      package:
        name: '{{ item }}'
        state: present
      loop: '{{ gpac_build_packages }}'

    - name: Clone GPAC source code
      git:
        repo: '{{ gpac_repository_url }}'
        dest: '{{ local_source_directory }}/gpac'
        force: yes
        version: '{{ gpac_version }}'
      register: _gpac_git

    - name: Set GPAC build environment
      set_fact:
        gpac_build_env: >
          {{ _gpac_git.after }}

    - name: Detect if GPAC must be reinstalled
      command:
        cat '{{ local_source_directory }}/gpac.build.cfg'
      changed_when: >
        gpac_build_env|trim != gpac_build.stdout|default('')|trim
      check_mode: no
      failed_when: no
      register: gpac_build

    - block:
        - name: Configure GPAC build process
          command:
            ./configure
          args:
            chdir: '{{ local_source_directory }}/gpac'

        - name: Build GPAC from source
          make:
            chdir: '{{ local_source_directory }}/gpac'
            params:
              '--jobs': '{{ ansible_processor_cores }}'

        - name: Install GPAC from source
          make:
            chdir: '{{ local_source_directory }}/gpac'
            target: install

        - name: Save build environment
          copy:
            content: '{{ gpac_build_env }}'
            dest: '{{ local_source_directory }}/gpac.build.cfg'
      when: gpac_build is change
  become: yes
  tags: [gpac, packages]

# Current configure gives:

#   $ /usr/local/src/gpac$ ./configure
#
#   ** System Configuration
#   Install prefix: /usr/local
#   Source path: /usr/local/src/gpac
#   C   compiler: gcc
#   C++ compiler: g++
#   make: make
#   CPU: x86_64
#   Big Endian: no
#
#   ** GPAC 0.6.0 rev0-gb5e51f8-HEAD Core Configuration **
#   debug version: no
#   GProf enabled: no
#   Static build enabled: no
#   Memory tracking enabled: no
#   Fixed-Point Version: no
#   IPV6 Support: yes
#   Static Modules: no
#
#   ** Detected libraries **
#   zlib: system
#   OSS Audio: yes
#   ALSA Audio: no
#   Jack Audio: no
#   PulseAudio Audio: no
#   DirectFB support: no
#   X11 Shared Memory support: yes (path: /usr/X11R6)
#   X11 XVideo support: no
#   SDL Support: no
#   OpenGL support: no
#   TinyGL support: no
#   OpenSSL support: yes
#   Mozilla XUL/GECKO support: no
#   DVB Support: yes
#   XMLRPC Support: no
#   wxWidgets support: no
#
#   ** Extra Libraries used **
#   SpiderMonkey: no
#   FreeType: system
#   JPEG: system
#   OpenJPEG: system
#   PNG: system
#   MAD: system
#   FAAD: system
#   XVID: system
#   FFMPEG: no
#   Xiph OGG: system
#   Platinum UPnP: no
#   AVCap: no
#   Xiph Vorbis: system
#   Xiph Theora: system
#   A52 (AC3): system
#   OpenSVCDecoder: no
#   OpenHEVCDecoder: no
#   Freenect: no
#
#   Creating config.mak
#   config.h is unchanged
#   Check config.log for detection failures
#   Done - type 'make help' for make info, 'make' to build
