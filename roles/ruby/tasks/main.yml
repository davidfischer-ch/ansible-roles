# https://gorails.com/setup/ubuntu/17.10
---

- dynamic_defaults:
    hostvars: '{{ hostvars[inventory_hostname] }}'
    defaults: '{{ ruby_dynamic_defaults }}'
    must_match: yes
  tags: [ruby, always]

- name: Install Ruby build packages
  package:
    name: '{{ ruby_build_packages }}'
    state: present
  become: yes
  tags: [ruby, packages]

- block:
    - include_tasks: setup-build-dep-{{ ansible_pkg_mgr }}.yml

    - name: Set Ruby build environment
      set_fact:
        ruby_build_env: >
          {{ ruby_build_cfg }}
          {{ ruby_checksum }}
          {{ ruby_version }}

    - name: Detect if Ruby must be reinstalled
      command:
        cat '{{ local_source_directory }}/ruby.build.cfg'
      changed_when: >
        ruby_build_env|trim != ruby_build.stdout|default('')|trim
      check_mode: no
      failed_when: no
      register: ruby_build

    - block:
        - name: Download Ruby source code
          get_url:
            url: http://ftp.ruby-lang.org/pub/ruby/{{ (ruby_version|string|splitext)[0] }}/{{ ruby_source_package }}
            dest: '{{ local_source_directory }}/{{ ruby_source_package }}'
            force: no
            sha256sum: '{{ ruby_checksum }}'

        - name: Extract Ruby source code
          unarchive:
            src: '{{ local_source_directory }}/{{ ruby_source_package }}'
            dest: '{{ local_source_directory }}'
            copy: no

        - name: Configure Ruby build process
          command:
            ./configure {{ ruby_build_cfg }}
          args:
            chdir: '{{ local_source_directory }}/{{ ruby_source_directoy }}'

        - name: Build Ruby from source
          make:
            chdir: '{{ local_source_directory }}/{{ ruby_source_directoy }}'
            params:
              '--jobs': '{{ ansible_processor_cores }}'

        - name: Install Ruby from source
          make:
            chdir: '{{ local_source_directory }}/{{ ruby_source_directoy }}'
            target: install

        - name: Save build environment
          copy:
            content: '{{ ruby_build_env }}'
            dest: '{{ local_source_directory }}/ruby.build.cfg'
      when: ruby_build is change

    - name: Check Ruby version
      command:
        ruby --version
      changed_when: no
      check_mode: no
      failed_when: ruby_version not in _ruby_version.stdout
      register: _ruby_version
  become: yes
  tags: [ruby, packages]
