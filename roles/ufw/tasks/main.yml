# Install and configure UFW
---

- name: Install UFW packages
  package: >
    name={{ item }} state=present
  become: yes
  tags: [ufw, packages]
  with_items: '{{ ufw_packages }}'

- block:
    - name: Allow ssh
      ufw: >
        port={{ ssh_port }} proto=tcp rule=allow
      notify: reload ufw

    - name: Configure UFW
      ufw: >
        state={{ ufw_enabled|bool|ternary('enabled', 'disabled') }} logging={{ ufw_logging }} policy={{ ufw_policy }}
      notify: reload ufw
  become: yes
  tags: [ufw, rules]

# http://docs.ansible.com/ansible/ufw_module.html
# FIXME find a better way to pass parameters to module like python's kwargs?

- name: Setup new rules
  ufw:
    # required
    rule: '{{ item.rule }}'
    # optional
    delete: '{{ item.delete|default(omit) }}'
    direction: '{{ item.direction|default(omit) }}'
    from_ip: '{{ item.from_ip|default(omit) }}'
    from_port: '{{ item.from_port|default(omit) }}'
    insert: '{{ item.insert|default(omit) }}'
    interface: '{{ item.interface|default(omit) }}'
    log: '{{ item.log|default(omit) }}'
    # name: Design decision, favor port/protocol over UFW profiles (/etc/ufw/applications.d/)
    proto: '{{ item.proto|default(omit) }}'
    to_ip: '{{ item.to_ip|default(omit) }}'
    to_port: '{{ item.to_port|default(omit) }}'
    # aliases made available for retro-compatibility
    dest: '{{ item.dest|default(omit) }}'  # to_ip
    port: '{{ item.port|default(omit) }}'  # to_port
  become: yes
  notify: reload ufw
  tags: [ufw, rules]
  with_items: '{{ ufw_rules }}'
