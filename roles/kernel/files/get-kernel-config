#!/usr/bin/env python
# -*- encoding: utf-8 -*-

"""
Return a JSON string with the GNU/Linux Kernel configuration.

*Example usage*

Retrieve current kernel configuration::

    $ get-kernel-config
    ...

Retrieve current kernel configuration (bis)::

    $ get-kernel-config $(uname -r)
"""

import argparse, errno, json, os, re, sys
try:
    import configparser
except ImportError:
    import ConfigParser as configparser


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('release', default=None, nargs='?')
    args = parser.parse_args()
    sys.stdout.write(json.dumps(get_kernel_config(args.release)))


CONFIG_PREFIX = re.compile(r'^config_')
DRIVER_IN_KERNEL = 'y'
DRIVER_HAS_MODULE = 'm'


def get_kernel_config(release=None):
    # Using index on os.uname() to be retro-compatible with old python releases
    try:
        with open('/boot/config-{0}'.format(release or os.uname()[2])) as f:
            config = configparser.ConfigParser()
            config.read_string('[kernel]' + f.read())
    except IOError as e:
        if e.errno == errno.ENOENT:
            return {}
        raise
    return {CONFIG_PREFIX.sub('', k): v for k, v in config['kernel'].items()}

if __name__ == '__main__':
    main()
